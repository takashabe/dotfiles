" lightline.vim側で描画するのでdeniteでstatuslineを描画しないようにする
if exists('g:loaded_lightline')
  call denite#custom#option('default', 'statusline', v:false)
endif

call denite#custom#source('file_mru', 'matchers', ['matcher_fuzzy', 'matcher_project_files'])
call denite#custom#source('file_rec', 'matchers', ['matcher_cpsm'])
call denite#custom#source('file_rec', 'sorters', ['sorter_rank'])

if executable('ag')
  call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])

  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'default_opts',
      \ ['-i', '--vimgrep', '--ignore-dir vendor'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', [''])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
endif

" ESCでノーマルモードに移行
call denite#custom#map('_', "<ESC>", '<denite:enter_mode:normal>')

" C-n, C-pで選択
call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>')
call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>')

" ignore case
call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
  \ [ '.git/', '.ropeproject/', '__pycache__/', 'node_modules/', 'vendor/',
  \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])

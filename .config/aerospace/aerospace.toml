start-at-login = true

after-login-command = []
after-startup-command = ['layout accordion --window-id 9']

enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

accordion-padding = 30

default-root-container-layout = 'tiles'
default-root-container-orientation = 'auto'

on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

automatically-unhide-macos-hidden-apps = true

[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical   = 10
outer.left       = 10
outer.bottom     = 10
outer.top        = 10
outer.right      = 10

#######################################
# workspace settings
#######################################
# 通常時はディスプレイ2枚で、たまにラップトップ1枚の想定
# [workspace-to-monitor-force-assignment]
# 1 = [1]    # terminal
# 2 = [1]    # browsing
# 3 = [2, 1] # note taking
# 4 = [2, 1] # communication
# 5 = [1]    # IDE
# 6 = [1]    # development tools
# 7 = [1]    # development tools#2
# 8 = [2]    # external monitor sandbox
# 9 = [1]    # background

# 外部作業時. builtinディスプレイが2として認識されるときに使う
[workspace-to-monitor-force-assignment]
1 = [2]    # terminal
2 = [2]    # browsing
3 = [1, 2] # note taking
4 = [1, 2] # communication
5 = [2]    # IDE
6 = [2]    # development tools
7 = [2]    # development tools#2
8 = [1]    # external monitor sandbox
9 = [2]    # background

# メインworkspace群
[[on-window-detected]]
if.app-id = 'org.alacritty'
run = 'move-node-to-workspace 1'
[[on-window-detected]]
if.app-id = "com.mitchellh.ghostty"
run = [
    # macOSネイティブのタブがAerospaceでうまく扱えないため、floatingにする. tmuxでタブを使っていれば問題はない
    # https://ghostty.org/docs/help/macos-tiling-wms#workarounds
    # https://github.com/nikitabobko/AeroSpace/issues/68
    # 'layout floating',
    'move-node-to-workspace 1',
]

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'move-node-to-workspace 2'
[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = 'move-node-to-workspace 2'
[[on-window-detected]]
if.app-id = 'company.thebrowser.dia'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace 3'
[[on-window-detected]]
if.app-id = 'com.todoist.mac.Todoist'
run = 'move-node-to-workspace 3'
[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = 'move-node-to-workspace 3'
[[on-window-detected]]
if.app-id = 'com.anthropic.claudefordesktop'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace 4'
[[on-window-detected]]
if.app-id = 'com.gather.Gather'
run = 'move-node-to-workspace 4'
[[on-window-detected]]
if.app-id = 'jp.naver.line.mac'
run = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = 'move-node-to-workspace 5'
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCodeInsiders'
run = 'move-node-to-workspace 5'
[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run = 'move-node-to-workspace 5'
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92' # Cursor
run = 'move-node-to-workspace 5'

[[on-window-detected]]
if.app-id = 'com.tinyapp.TablePlus'
run = 'move-node-to-workspace 6'
[[on-window-detected]]
if.app-id = 'com.postmanlabs.mac'
run = 'move-node-to-workspace 6'

[[on-window-detected]]
if.app-id = 'com.devtoys'
run = 'move-node-to-workspace 7'

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace 9'

# タイルにすると邪魔になるアプリケーション群
[[on-window-detected]]
if.app-id = "com.apple.finder"
run = 'layout floating'
[[on-window-detected]]
if.app-id = "com.microsoft.Excel"
run = 'layout floating'

#######################################
# Main mode
#######################################

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# レイアウトをtile/accordionに変更する
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# モニタをまたいでfocusを移動する
alt-h = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
alt-j = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
alt-k = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors up'
alt-l = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'

# focusされているwindowを移動する
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# windowをリサイズする
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# 指定のworkspaceにフォーカスを移す
cmd-1 = 'workspace 1'
cmd-2 = 'workspace 2'
cmd-3 = 'workspace 3'
cmd-4 = 'workspace 4'
cmd-5 = 'workspace 5'
cmd-6 = 'workspace 6'
cmd-7 = 'workspace 7'
cmd-8 = 'workspace 8'
cmd-9 = 'workspace 9'

# 指定のworkspaceにwindowを移動する
cmd-shift-1 = 'move-node-to-workspace 1'
cmd-shift-2 = 'move-node-to-workspace 2'
cmd-shift-3 = 'move-node-to-workspace 3'
cmd-shift-4 = 'move-node-to-workspace 4'
cmd-shift-5 = 'move-node-to-workspace 5'
cmd-shift-6 = 'move-node-to-workspace 6'
cmd-shift-7 = 'move-node-to-workspace 7'
cmd-shift-8 = 'move-node-to-workspace 8'
cmd-shift-9 = 'move-node-to-workspace 9'

# 直前のworkspaceに切り替える
alt-tab = 'workspace-back-and-forth'

# workspaceをモニタ間で移動する
alt-shift-tab = 'move-workspace-to-monitor next'

#######################################
# Service mode
#######################################
alt-shift-semicolon = 'mode service'

[mode.service.binding]
c = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
    'layout floating tiling',
    'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

h = ['join-with left', 'mode main']
j = ['join-with down', 'mode main']
k = ['join-with up', 'mode main']
l = ['join-with right', 'mode main']
